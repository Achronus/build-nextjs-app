name: BiWeekly Docker Build

on:
  schedule:
    - cron: "0 0 */14 * *" # Every 14 days (two weeks) at 00:00 UTC (London time is 00:00 GMT)
      timezone: Europe/London

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine previous tag
        id: get_previous_tag
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0)
          echo "::set-output name=previous_tag::${PREVIOUS_TAG}"

      - name: Determine next version
        id: calculate_next_version
        run: |
          PREVIOUS_TAG=${{ steps.get_previous_tag.outputs.previous_tag }}
          if [[ "$PREVIOUS_TAG" == "" || "$PREVIOUS_TAG" == "latest" ]]; then
            NEXT_VERSION="1.0.0"
          else
            IFS='.' read -r -a VERSION_PARTS <<< "$PREVIOUS_TAG"
            MAJOR="${VERSION_PARTS[0]}"
            MINOR="${VERSION_PARTS[1]}"
            PATCH="${VERSION_PARTS[2]}"
            PATCH=$((PATCH + 1))
            NEXT_VERSION="$MAJOR.$MINOR.$PATCH"
          fi
          echo "::set-output name=next_version::${NEXT_VERSION}"

      - name: Build and tag Docker image
        id: docker_build
        run: |
          docker buildx build --file Dockerfile --tag achronus/build_nextjs_app:latest .
          NEXT_VERSION=${{ steps.calculate_next_version.outputs.next_version }}
          docker tag achronus/build_nextjs_app:latest achronus/build_nextjs_app:${NEXT_VERSION}

      - name: Push Docker image
        if: success() && github.event_name == 'schedule'
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push achronus/build_nextjs_app:latest
          NEXT_VERSION=${{ steps.calculate_next_version.outputs.next_version }}
          docker push achronus/build_nextjs_app:${NEXT_VERSION}
